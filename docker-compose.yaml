version: '3'
services:
  # Product service 
  product:
    build:
      context: ./product
      dockerfile: Dockerfile
    image: product
    container_name: product-service
    ports:
      - 3000:3000
    environment:
      PORT: 3000
      NODE_ENV: production
      MONGO_URI: mongodb://product-db:27017/
      MONGO_INITDB_DATABASE: fu-capstone-product
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
    depends_on:
      - product-db
  product-db:
    image: mongo
    container_name: product-mongo-db
    # ports: 
    #   - '27017:27017'
    environment:
      MONGO_INITDB_DATABASE: fu-capstone-product
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
    # enable auth for mongo
    command: --auth
    volumes:
      - product-mongo-data:/data/db

  # Review service
  review:
    build:
      context: ./review
      dockerfile: Dockerfile
    image: review
    container_name: review-service
    ports:
      - 3001:3001
    environment:
      PORT: 3001
      NODE_ENV: production
      MONGO_URI: mongodb://review-db:27017/
      MONGO_INITDB_DATABASE: fu-capstone-review
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
    depends_on:
      - review-db
  review-db:
    image: mongo
    container_name: review-mongo-db
    # ports: 
    #   - '27017:27017'
    environment:
      MONGO_INITDB_DATABASE: fu-capstone-review
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
    # enable auth for mongo
    command: --auth
    volumes:
      - review-mongo-data:/data/db

  # Invetory service
  inventory:
    build:
      context: ./inventory
      dockerfile: Dockerfile
    image: inventory
    container_name: inventory-service
    ports:
      - 3002:3002
    environment:
      PORT: 3002
      NODE_ENV: production
      DATABASE_URL: postgres://postgres:1@inventory-db:5432/fu-capstone-inventory
    working_dir: /usr/src/app
    command: sh -c "yarn typeorm migration:run -d ./src/data-source.ts && yarn start"
    depends_on:
      - inventory-db
    links:
      - inventory-db
  inventory-db:
    image: postgres
    # ports: 
    #   - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1
      POSTGRES_DB: fu-capstone-inventory
    volumes:
      # - ./inventory/db-data:/var/lib/postgresql/data
      - inventory-postgres-data:/var/lib/postgresql/data

  # Shopping service
  shopping:
    build:
      context: ./shopping
      dockerfile: Dockerfile
    image: shopping
    container_name: shopping-service
    ports:
      - 3003:3003
    environment:
      PORT: 3003
      NODE_ENV: production
      MONGO_URI: mongodb://shopping-db:27017/
      MONGO_INITDB_DATABASE: fu-capstone-shopping
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
    depends_on:
      - shopping-db
  shopping-db:
    image: mongo
    container_name: shopping-mongo-db
    # ports: 
    #   - '27017:27017'
    environment:
      MONGO_INITDB_DATABASE: fu-capstone-shopping
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret
    # enable auth for mongo
    command: --auth
    volumes:
      - shopping-mongo-data:/data/db

  # User service
  user:
    build:
      context: ./user
      dockerfile: Dockerfile
    image: user
    container_name: user-service
    ports:
      - 3004:3004
    environment:
      PORT: 3004
      NODE_ENV: production
      DATABASE_URL: postgres://postgres:1@user-db:5432/fu-capstone-user
    working_dir: /usr/src/app
    command: sh -c "yarn typeorm migration:run -d ./src/data-source.ts && yarn start"
    depends_on:
      - user-db
    links:
      - user-db
  user-db:
    image: postgres
    # ports: 
    #   - '5434:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1
      POSTGRES_DB: fu-capstone-user
    volumes:
      # - ./user/db-data:/var/lib/postgresql/data
      - user-postgres-data:/var/lib/postgresql/data

  # Order service 
  order:
    build:
      context: ./order
      dockerfile: Dockerfile
    image: order
    container_name: order-service
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://order-db:5432/fu-capstone-order
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 1
    depends_on:
      - order-db
    links:
      - order-db
  order-db:
    image: postgres:latest
    # ports:
    #   - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1
      POSTGRES_DB: fu-capstone-order
    volumes:
      # - ./order/db-data:/var/lib/postgresql/data
      - order-postgres-data:/var/lib/postgresql/data
      #Discount service
      # discount-db:
      #   image: postgres

      #   environment:
      #     POSTGRES_USER: postgres
      #     POSTGRES_PASSWORD: 123456
      #     POSTGRES_DB: fu-capstone-discount
      #   volumes:
      # - ./inventory/db-data:/var/lib/postgresql/data
      # - discount-postgres-data:/var/lib/postgresql/data
      # discount:
      # build:
      #   context: ./discount
      #   dockerfile: Dockerfile
      # image: discount
      # container_name: discount-service
      # ports:
      #   - 7000:80
      # environment:
      #   DB_CONNECTION_STRING: "host=discount-db;port=5432;database=fu-capstone-discount;username=postgres;password=123456"
      #   TZ: Asia/Ho_Chi_Minh
      # depends_on:
      #   - discount-db
      #proxy
  nginx-proxy:
    build:
      context: ./proxy
      dockerfile: Dockerfile
    image: nginx-proxy
    depends_on:
      - inventory
      - order
      - product
      - review
      - shopping
      - user
    ports:
      - 8001:80

volumes:
  inventory-postgres-data:
  user-postgres-data:
  order-postgres-data:
  product-mongo-data:
  review-mongo-data:
  shopping-mongo-data:
    # discount-postgres-data:


